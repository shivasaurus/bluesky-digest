name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Build project
      run: yarn build
    
    - name: Run tests
      run: yarn test
    
    - name: Run linting
      run: yarn lint || echo "Linting not configured"
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          test-results/
          coverage/

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'yarn'
    
    - name: Install dependencies
      run: yarn install --frozen-lockfile
    
    - name: Run security audit
      run: yarn audit --level moderate || echo "Security audit completed with warnings"
    
    - name: Check for vulnerabilities
      run: |
        if yarn audit --level high; then
          echo "High severity vulnerabilities found"
          exit 1
        fi

  docker:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: docker build -t mahoot-feed-generator .
    
    - name: Test Docker image
      run: |
        docker run --rm mahoot-feed-generator node -e "console.log('Docker image test passed')"
    
    - name: Log in to Docker Hub
      if: github.event_name == 'push'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Push Docker image
      if: github.event_name == 'push'
      run: |
        docker tag mahoot-feed-generator ${{ secrets.DOCKER_USERNAME }}/mahoot-feed-generator:latest
        docker tag mahoot-feed-generator ${{ secrets.DOCKER_USERNAME }}/mahoot-feed-generator:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/mahoot-feed-generator:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/mahoot-feed-generator:${{ github.sha }}

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [test, security, docker]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - name: Deploy to staging
      run: echo "Deploy to staging environment"
      # Add your staging deployment commands here
      # Example: Deploy to Railway, Render, or DigitalOcean

  deploy-production:
    runs-on: ubuntu-latest
    needs: [test, security, docker]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Deploy to production
      run: echo "Deploy to production environment"
      # Add your production deployment commands here
      # Example: Deploy to Railway, Render, or DigitalOcean
